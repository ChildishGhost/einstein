diff --git a/node_modules/vm2/lib/builtin.js b/node_modules/vm2/lib/builtin.js
index 499e1f6..61b45e5 100644
--- a/node_modules/vm2/lib/builtin.js
+++ b/node_modules/vm2/lib/builtin.js
@@ -62,7 +62,7 @@ const SPECIAL_MODULES = {
 	events: {
 		init(vm) {
 			if (!cacheEventsScript) {
-				const eventsSource = fs.readFileSync(`${__dirname}/events.js`, 'utf8');
+				const eventsSource = fs.readFileSync(`${__dirname}/${VM2_LIB_PATH || ''}events.js`, 'utf8');
 				cacheEventsScript = new VMScript(`(function (fromhost) { const module = {}; module.exports={};{ ${eventsSource}
 	} return module.exports;})`, {filename: 'events.js'});
 			}
diff --git a/node_modules/vm2/lib/nodevm.js b/node_modules/vm2/lib/nodevm.js
index d666c70..2098359 100644
--- a/node_modules/vm2/lib/nodevm.js
+++ b/node_modules/vm2/lib/nodevm.js
@@ -281,8 +281,8 @@ class NodeVM extends VM {
 		objectDefineProperty(this, 'resolver', {__proto__: null, value: resolver, enumerable: true});
 
 		if (!cacheSandboxScript) {
-			cacheSandboxScript = compileScript(`${__dirname}/setup-node-sandbox.js`,
-				`(function (host, data) { ${fs.readFileSync(`${__dirname}/setup-node-sandbox.js`, 'utf8')}\n})`);
+			cacheSandboxScript = compileScript(`${__dirname}/${VM2_LIB_PATH || ''}setup-node-sandbox.js`,
+				`(function (host, data) { ${fs.readFileSync(`${__dirname}/${VM2_LIB_PATH || ''}setup-node-sandbox.js`, 'utf8')}\n})`);
 		}
 
 		const closure = this._runScript(cacheSandboxScript);
diff --git a/node_modules/vm2/lib/vm.js b/node_modules/vm2/lib/vm.js
index 0b71f0b..e2e367b 100644
--- a/node_modules/vm2/lib/vm.js
+++ b/node_modules/vm2/lib/vm.js
@@ -142,10 +142,10 @@ function doWithTimeout(fn, timeout) {
 	}
 }
 
-const bridgeScript = compileScript(`${__dirname}/bridge.js`,
-	`(function(global) {"use strict"; const exports = {};${fs.readFileSync(`${__dirname}/bridge.js`, 'utf8')}\nreturn exports;})`);
-const setupSandboxScript = compileScript(`${__dirname}/setup-sandbox.js`,
-	`(function(global, host, bridge, data, context) { ${fs.readFileSync(`${__dirname}/setup-sandbox.js`, 'utf8')}\n})`);
+const bridgeScript = compileScript(`${__dirname}/${VM2_LIB_PATH || ''}bridge.js`,
+	`(function(global) {"use strict"; const exports = {};${fs.readFileSync(`${__dirname}/${VM2_LIB_PATH || ''}bridge.js`, 'utf8')}\nreturn exports;})`);
+const setupSandboxScript = compileScript(`${__dirname}/${VM2_LIB_PATH || ''}setup-sandbox.js`,
+	`(function(global, host, bridge, data, context) { ${fs.readFileSync(`${__dirname}/${VM2_LIB_PATH || ''}setup-sandbox.js`, 'utf8')}\n})`);
 const getGlobalScript = compileScript('get_global.js', 'this');
 
 let getGeneratorFunctionScript = null;
